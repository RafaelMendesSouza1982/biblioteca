<?php

class ErrorController extends Zend_Controller_Action {

    public function init() {
        Zend_Loader::loadClass('UtilDAO');
    }

    public function preDispatch() {
        $util = new UtilDAO();
        $this->view->datahora = $util->dataAtualTela();
    }

    public function errorAction() {
        $errors = $this->_getParam('error_handler');

        if (!$errors || !$errors instanceof ArrayObject) {
            $this->view->message = 'You have reached the error page';
            return;
        }

        switch ($errors->type) {
            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ROUTE:
            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_CONTROLLER:
            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ACTION:
                // 404 error -- controller or action not found
                $this->getResponse()->setHttpResponseCode(404);
                $priority = Zend_Log::NOTICE;
                $this->view->message = 'Page not found';
                break;
            default:
                // application error
                $this->getResponse()->setHttpResponseCode(500);
                $priority = Zend_Log::CRIT;
                $this->view->message = 'Application error';
                break;
        }

        // Log exception, if logger available
        if ($log = $this->getLog()) {
            $log->log($this->view->message, $priority, $errors->exception);
            $log->log('Request Parameters', $priority, $errors->request->getParams());
        }

        // conditionally display exceptions
        if ($this->getInvokeArg('displayExceptions') == true) {
            $this->view->exception = $errors->exception;
        }

        $this->view->request = $errors->request;
    }

    public function getLog() {
        $bootstrap = $this->getInvokeArg('bootstrap');
        if (!$bootstrap->hasResource('Log')) {
            return false;
        }
        $log = $bootstrap->getResource('Log');
        return $log;
    }

    public function forbiddenAction() {
        Zend_Loader::loadClass('UsuarioBancoMultiplataforma');
        $auth = Zend_Auth::getInstance();
        $this->view->usuario = $auth->getIdentity();
        $this->_helper->layout->setLayout('inicial');
        $usuario = new UsuarioBancoMultiplataforma();
        $id_usuario = $this->_getParam('id');
        $usuario2 = Zend_Auth::getInstance()->getStorage()->read();
        $res_usuario = $usuario2->getUserName();

        $query = "SELECT a.id_usuario_multiplataforma, a.nome as nomeus, a.usuario, a.senha, a.dt_data_hora_inclusao, a.id_perfil_multiplataforma, b.id_perfil_multiplataforma, b.nome
                  FROM monitoracao.tb_usuario_multiplataforma a
                  INNER JOIN monitoracao.tb_perfil_multiplataforma b
                  ON a.id_perfil_multiplataforma = b.id_perfil_multiplataforma  
	          and a.usuario = '$res_usuario'";
        $db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $consultaUsuario = $db->fetchRow($query);
        $this->view->usuario2 = $consultaUsuario;
    }

}
